tol = 0.000001
constr1 = @(x) x(1) - 2*x(2) + 2*x(3) - 2;
constr2 = @(x) x(2) + x(3) - 1;

func = @(x) x(1)^2 - 2*x(1) + x(2)^3 - x(3)^3 + 4*x(3);

grad = @(x) [2*x(1) - 2; 3*x(2)^2; -3*x(3)^2 + 4];

null_space = [-3,-1,1]';

constr3 = @(x) 6*x(1) + 3*x(2)^2 + 3*x(3)^2 - 10;

jacobian = @(x) [2,0,0; 0,6*x(2),0; 0,0,-6*x(3)];

F_x = @(x) [x(1) - 2*x(2) + 2*x(3) - 2; x(2) + x(3) - 1; 6*x(1) + 3*x(2)^2 + 3*x(3)^2 - 10];

x = [1,1,1];

for j = 1:1000
    y = x - inv(jacobian(x))* F_x(x);
    if abs(func(y)-func(x)) < tol
        disp(y);
        break;
    else
        x=y;
    end
end
    
     
